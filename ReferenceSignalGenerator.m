function [ seq ] = ReferenceSignalGenerator( alpha, f_PUCCH_ss )
%REFERENCESIGNALGENERATOR generates reference signal sequence acc. to 36.211 5.5.1
%   Computing reference signal sequence as defined in 36.211 5.5.1
%   Assumptions:
%   - delta = 0
%   - N_RB_sc = 12 % number of subcarriers per RB
%   - N_max,UL_RB = 1
%   - --> m = 1
%   - ----> M_RS_sc = N_RB_sc = 12
%   - base sequence number (v) within group is ignored
%   - group hopping is set disabled (f_gh(n_s)=0) see 5.5.1.3

M_RS_sc = 12;
n = (1:M_RS_sc)-1;
% phi matrix according to Table 5.5.1.2-1 (M_RS_sc = N_RB_sc = 12)
phi = [-1, 1, 3, -3, 3, 3, 1, 1, 3, 1, -3, 3; ...
  1, 1, 3, 3, 3, -1, 1, -3, -3, 1, -3, 3; ...
  1, 1, -3, -3, -3, -1, -3, -3, 1, -3, 1, -1; ...
  -1, 1, 1, 1, 1, -1, -3, -3, 1, -3, 3, -1; ...
  -1, 3, 1, -1, 1, -1, -3, -1, 1, -1, 1, 3; ...
  1, -3, 3, -1, -1, 1, 1, -1, -1, 3, -3, 1; ...
  -1, 3, -3, -3, -3, 3, 1, -1, 3, 3, -3, 1; ...
  -3, -1, -1, -1, 1, -3, 3, -1, 1, -3, 3, 1; ...
  1, -3, 3, 1, -1, -1, -1, 1, 1, 3, -1, 1; ...
  1, -3, -1, 3, 3, -1, -3, 1, 1, 1, 1, 1; ...
  -1, 3, -1, 1, 1, -3, -3, -1, -3, -3, 3, -1; ...
  3, 1, -1, -1, 3, 3, -3, 1, 3, 1, 3, 3; ...
  1, -3, 1, 1, -3, 1, 1, 1, -3, -3, -3, 1; ...
  3, 3, -3, 3, -3, 1, 1, 3, -1, -3, 3, 3; ...
  -3, 1, -1, -3, -1, 3, 1, 3, 3, 3, -1, 1; ...
  3, -1, 1, -3, -1, -1, 1, 1, 3, 1, -1, -3; ...
  1, 3, 1, -1, 1, 3, 3, 3, -1, -1, 3, -1; ...
  -3, 1, 1, 3, -3, 3, -3, -3, 3, 1, 3, -1; ...
  -3, 3, 1, 1, -3, 1, -3, -3, -1, -1, 1, -3; ...
  -1, 3, 1, 3, 1, -1, -1, 3, -3, -1, -3, -1; ...
  -1, -3, 1, 1, 1, 1, 3, 1, -1, 1, -3, -1; ...
  -1, 3, -1, 1, -3, -3, -3, -3, -3, 1, -1, -3; ...
  1, 1, -3, -3, -3, -3, -1, 3, -3, 1, -3, 3; ...
  1, 1, -1, -3, -1, -3, 1, -1, 1, 3, -1, 1; ...
  1, 1, 3, 1, 3, 3, -1, 1, -1, -3, -3, 1; ...
  1, -3, 3, 3, 1, 3, 3, 1, -3, -1, -1, 3; ...
  1, 3, -3, -3, 3, -3, 1, -1, -1, 3, -1, -3; ...
  -3, -1, -3, -1, -3, 3, 1, -1, 1, 3, -3, -3; ...
  -1, 3, -3, 3, -1, 3, 3, -3, 3, 3, -1, -1; ...
  3, -3, -3, -1, -1, -3, -1, 3, -3, 3, 1, -1];
u = mod(f_PUCCH_ss, 30);
baseSeq = exp(phi*pi/4); % 5.5.1.2

seq = exp(j*alpha*n).*baseSeq(u+1,:);
end

